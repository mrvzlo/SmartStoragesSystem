@using SmartKitchen.Domain.DisplayModels
@using SmartKitchen.Domain.Enums
@using SmartKitchen.Domain.Extensions
@model IQueryable<CellDisplayModel>

@Html.Grid(Model).Build(c =>{
    c.Add(x => x.ProductName).RenderedAs(NameHelper).Titled("Name").Css("w-25");
    c.Add(x => x.CategoryName).Titled("Category").Css("w-25");
    c.Add(x => x.SafetyStatus).RenderedAs(SafetyHelper).Titled("Safety").Css("w-25");
    c.Add(x => x.Amount).RenderedAs(AmountHelper).Titled("Amount").Css("w-25");
}).Sortable().Css("table-borderless table-hover m-0 table text-center")

@helper NameHelper(CellDisplayModel item)
{
    <div id="name_@item.Id" onclick="StorageViewJs.mark(@item.Id)">@item.ProductName</div>
}

@helper AmountHelper(CellDisplayModel item)
{
    <div onclick="AmountPickerJs.showAmountPicker(@item.Id)">
        <a id="amount_@item.Id" alt="@item.AmountStatus.GetStatus()" class="font-weight-bold text-decoration-none @GetTextColor(item.AmountStatus.GetStatus())" data-toggle="modal" data-target="#AmountModal">
            @item.AmountStatus.GetDescription()
        </a>
    </div>
}

@helper SafetyHelper(CellDisplayModel item)
{
    bool changeableDate = item.AmountStatus != Amount.None;
    <div @Html.Raw(changeableDate ? "onclick=\"DatetimePickerJs.showDatePicker('" + item.Id + "')\"" : "")>
        <a id="safety_@item.Id" alt="@item.SafetyStatus.GetStatus()" class="font-weight-bold @GetTextColor(item.SafetyStatus.GetStatus())" @Html.Raw(changeableDate ? "data-toggle='modal' data-target='#DateModal'" : "")>
            @item.SafetyStatus.GetDescription()
        </a>
    </div>
}

@helper GetTextColor(StatusType type)
{
    var res = "";
    switch (type)
    {
        case StatusType.Unknown:
            res = "text-secondary";
            break;
        case StatusType.Danger:
            res = "text-danger";
            break;
        case StatusType.Warning:
            res = "text-warning";
            break;
        case StatusType.Normal:
            res = "text-success";
            break;
    }
    @res
}