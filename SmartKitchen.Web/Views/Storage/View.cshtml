@using SmartKitchen.Domain.CreationModels
@model SmartKitchen.Domain.DisplayModels.StorageDescription
@{
    ViewBag.Title = "Storage " + Model.Name;
}
<div class="h4 text-center">@Model.Name</div>
@Html.Partial("_AddProduct", new CellCreationModel { Storage = Model.Id })
<div class="text-center table-responsive m-0 big-border" style="background-color: #@Model.Type.Background">
    @if (Model.CellCount == 0)
    {
        <div class="alert m-0 h3">This storage is empty now</div>
    }
    else
    {
        <table class="w-100 table table-hover table-borderless p-0 m-0" id="table">
            <tr>
                <th style="width: 25%" onclick="order(1)">Name</th>
                <th style="width: 25%" onclick="order(2)">Category</th>
                <th style="width: 25%" onclick="order(3)">Safety</th>
                <th style="width: 25%" onclick="order(4)">Amount</th>
            </tr>
            @{Html.RenderAction("ShowAllCells", new { storage = Model.Id, order = ViewBag.Order });}
        </table>
    }
</div>
@if (Model.CellCount > 0)
{
    <div class="row justify-content-around m-1">
        <div class="col-6 col-md-3 col-lg-2 p-1"><button class="btn btn-main w-100" onclick="markGroup(1);">Mark all</button></div>
        <div class="col-6 col-md-3 col-lg-2 p-1"><button class="btn btn-main w-100" onclick="markGroup(3);">Mark expired</button></div>
        <div class="col-6 col-md-3 col-lg-2 p-1"><button class="btn btn-main w-100" onclick="markGroup(2);">Mark absent</button></div>
        <div class="col-6 col-md-3 col-lg-2 p-1"><button class="btn btn-main w-100" onclick="markGroup(0);">Clear</button></div>
    </div>
    <div class="row justify-content-around m-1">
        <div class="col-6 col-md-3 col-lg-2 p-1"><button class="btn btn-main w-100">To basket</button></div>
    </div>
}
@Html.Partial("_DatePicker")
@Html.Partial("_AmountPicker")
@section scripts{
    <script>
        var cellId;

        function order(type) {
            if (type == @ViewBag.Order) type = -type;
            window.location = '@Url.Action("View", "Storage")?id=@Model.Id&order=' + type;
        }

        function showDatePicker(product, productName) {
            cellId = product;
            var name = $("#name_" + cellId).text();
            $('#DateModalLabel').text("Choose expiration date for " + name);
        }

        function showAmountPicker(product, productName) {
            cellId = product;
            var name = $("#name_" + cellId).text();
            $('#AmountModalLabel').text("Choose amount of " + name);
        }

        $("#Month").change(function() {
            UpdateDaysinMonth();
        });

        $("#Year").change(function() {
            UpdateDaysinMonth();
        });

        $("#Day").change(function() {
            UpdateDaysinMonth();
        });

        function UpdateDaysinMonth() {
            var Month = $("#Month").val();
            var max = 31;
            if (Month == 4 || Month == 6 || Month == 9 || Month == 11) max = 30;
            if (Month == 2) {
                if ($("#Year").val() % 4 == 0) max = 29;
                else max = 28;
            }

            $("#Day").attr({
                "max": max
            });
            if ($("#Day").val() > max) $("#Day").val(max);
        }

        function DateUpdate() {
            var Day = $("#Day").val();
            var Month = $("#Month").val();
            var Year = $("#Year").val();
            var newDate = Day + "/" + Month + "/" + Year;
            $.ajax({
                url: '@Url.Action("DateUpdate", "Storage")?cell=' + cellId + '&dateStr=' + newDate,
                success: function(data) {
                    document.getElementById(cellId).innerHTML = data;
                }
            });
        }

        function changeProductAmount(amount) {
            $.ajax({
                url: '@Url.Action("SetAmount", "Storage")?cell=' + cellId + '&amount=' + amount,
                success: function(data) {
                    document.getElementById(cellId).innerHTML = data;
                }
            });
        }

        function removeProduct() {
            var name = $("#name_" + cellId).text();
            if (confirm(name + " cell will be completely removed")) {
                $.ajax({
                    url: '@Url.Action("Remove", "Storage")?cellId=' + cellId,
                    success: function() {
                        document.getElementById(cellId).outerHTML = "";
                    }
                });
            }
        }

        function getProduct(product) {
            $.ajax({
                url: '@Url.Action("CellDescription", "Storage")?cell=' + product,
                success: function(data) {
                    document.getElementById(product).outerHTML = data;
                }
            });
        }

        function inputChange(id, value) {
            id = "#" + id;
            var max = $(id).attr('max');
            var min = $(id).attr('min');
            var val = $(id).val();
            var newVal = Number(val) + value;
            if (newVal > max) newVal = max;
            else if (newVal < min) newVal = min;
            $(id).val(newVal);
            UpdateDaysinMonth();
        }

        function setTodayDate() {
            var date = new Date();
            $("#Month").val(date.getMonth() + 1);
            $("#Day").val(date.getDate());
            $("#Year").val(date.getFullYear());
        }

        $(function() {
            UpdateDaysinMonth();
            $("#Month").attr({
                "max": 12,
                "min": 1
            });
            $("#Day").attr({
                "min": 1
            });
            $("#Year").attr({
                "min": (new Date()).getFullYear()
            });
            setTodayDate();
        });

        function mark(id) {
            var e = $("#name_" + id);
            if (e.hasClass("font-weight-bold"))
                e.removeClass("font-weight-bold");
            else e.addClass("font-weight-bold");
        }

        function markGroup(type) {
            var table = document.getElementById('table');
            for (var i = 0; i < table.rows.length; i += 1) {
                var row = table.rows[i];
                var id = row.id;
                if (id > 0) {
                    var name = $("#name_" + id);
                    var marked = name.hasClass("font-weight-bold");
                    if (type === 0 && marked) {
                        name.removeClass("font-weight-bold");
                    } else if (!marked) {
                        if (type === 1 ||
                            type === 2 && $("#amount_" + id).hasClass("text-secondary") ||
                            type === 3 && $("#safety_" + id).hasClass("text-danger"))
                            name.addClass("font-weight-bold");
                    }
                }
            }
        }
    </script>
}