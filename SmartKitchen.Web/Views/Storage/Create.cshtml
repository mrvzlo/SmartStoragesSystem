@model List<SmartKitchen.Domain.Enitities.StorageType>
@{
    ViewBag.Title = "New storage";
    int item = ViewBag.Selected != null ? ViewBag.Selected : Model.First().Id;
}
<h4 class="text-center">New storage</h4>
<div class="row justify-content-center m-0">
    <div class="col-12 col-lg-8">
        <div class="row justify-content-center">
            @foreach (var i in Model)
            {
                <div class="col-md col-3 px-1">
                    <div id="s_@i.Id" class="storage-small pointer row justify-content-around px-2 py-1" style="background-color: #@i.Background" onclick="StorageCreateJs.change(@i.Id)">
                        @{ var filename = i.Id + ".png";}
                        <img class="rowicon" src="~/Content/images/@filename" />
                        @Html.Hidden("name_" + i.Id, i.Name)
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="row justify-content-center">
    @using (Html.BeginForm("Create", "Storage", FormMethod.Post, new { @class = "storage big-border col-lg-8" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("TypeId")
        <div class="row justify-content-center py-2">
            @Html.Editor("Name", new { htmlAttributes = new { @class = "col-md-8 col-11 py-1", placeholder = "New storage" } })
            <div class="error col-12 order-md-last ">@Html.ValidationMessage("Name")</div>
            <div class="col-md-3 mt-md-0 mt-3 col-11 px-0"><input type="submit" value="Create" class="btn btn-main py-1 big-border" /></div>
        </div>
    }
</div>
@section scripts{
    @Scripts.Render("~/js/storageCreate")
    <script>
        $(function () {
            StorageCreateJs.initialize({first: @item});
        });
    </script>
}
